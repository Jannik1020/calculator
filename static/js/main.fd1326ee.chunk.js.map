{"version":3,"sources":["app/main/components/Display/DisplayComponent.jsx","utils/operations.js","app/main/components/CalcButton/CalcButtonComponent.jsx","app/main/components/Calculator/CalculatorComponent.jsx","app/main/redux/types.js","app/main/redux/actions.js","app/main/components/Calculator/CalculatorContainer.js","app/App.js","serviceWorker.js","app/main/redux/reducers.js","app/main/redux/index.js","reducers.js","index.js"],"names":["DisplayComponent","id","className","this","props","viewNumber","React","Component","add","a","b","subtract","divide","multiply","CalcButtonComponent","test","value","onClick","parseInt","operations","console","log","chain","bind","CalculatorComponent","buttonArr","clear","operation","appendDigit","dot","equal","calcChain","nextChainKey","map","button","index","key","digit","type","types","operationFunc","func","CalculatorContainer","connect","state","main","dispatch","actions","App","Boolean","window","location","hostname","match","defaultState","0","undefined","result","isLastResult","mainReducer","action","newChain","lastChainPart","Object","keys","length","substring","parseFloat","i","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fd1326ee.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./display.scss\"\r\n\r\nclass DisplayComponent extends React.Component{\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"display-wrapper\" className={this.props.className}>\r\n                <span id=\"display\">{this.props.viewNumber}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DisplayComponent;","export const add = (a, b) => a + b;\r\nexport const subtract = (a, b) => a - b;\r\nexport const divide = (a, b) => a / b;\r\nexport const multiply = (a, b) => a * b;","import * as operations from \"../../../../utils/operations\";\r\nimport React from \"react\";\r\nimport \"./calc-button.scss\"\r\n\r\nclass CalcButtonComponent extends React.Component{\r\n    onClick(){\r\n        if(/[0-9]/.test(this.props.value) === true){\r\n            this.props.onClick(parseInt(this.props.value));\r\n        }\r\n        else if(/[+-/x]/g.test(this.props.value) === true){\r\n            switch(this.props.value){\r\n                case \"+\":\r\n                    this.props.onClick(operations.add);\r\n                    break;\r\n                case \"-\":\r\n                    this.props.onClick(operations.subtract);\r\n                    break;\r\n                case \"x\":\r\n                    this.props.onClick(operations.multiply);\r\n                    break;\r\n                case \"/\":\r\n                    this.props.onClick(operations.divide);\r\n                    break;\r\n                case \".\":\r\n                    this.props.onClick();\r\n                    break;\r\n                default:\r\n                    console.log(\"pattern error in CalcButton\");\r\n            }\r\n        }\r\n        else{\r\n            this.props.onClick();\r\n        }\r\n\r\n        console.log(this.props.chain);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <button onClick={this.onClick.bind(this)} id={this.props.id} className={this.props.className}>{this.props.value}</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalcButtonComponent;","import DisplayComponent from \"../Display/DisplayComponent\"\r\nimport CalcButtonComponent from \"../CalcButton/CalcButtonComponent\"\r\nimport React from \"react\";\r\nimport \"./calculator.scss\";\r\n\r\nclass CalculatorComponent extends React.Component{\r\n    buttonArr = [[\"AC\", \"clear\", \"\", this.props.clear], //content, id, dipatch\r\n                     [\"/\", \"divide\", \"operation\", this.props.operation],\r\n                     [\"x\", \"multiply\", \"button operation\", this.props.operation],\r\n                     [\"7\", \"seven\", \"number\", this.props.appendDigit],\r\n                     [\"8\", \"eight\", \"number\", this.props.appendDigit],\r\n                     [\"9\", \"nine\", \"number\", this.props.appendDigit],\r\n                     [\"-\", \"subtract\", \"operation\", this.props.operation],\r\n                     [\"4\", \"four\", \"number\", this.props.appendDigit],\r\n                     [\"5\", \"five\", \"number\", this.props.appendDigit],\r\n                     [\"6\", \"six\", \"number\", this.props.appendDigit],\r\n                     [\"+\", \"add\", \"operation\", this.props.operation],\r\n                     [\"1\", \"one\", \"number\", this.props.appendDigit],\r\n                     [\"2\", \"two\", \"number\", this.props.appendDigit],\r\n                     [\"3\", \"three\", \"number\", this.props.appendDigit],\r\n                     [\"0\", \"zero\", \"number\", this.props.appendDigit],\r\n                     [\".\", \"decimal\", \"number\", this.props.dot],\r\n                     [\"=\", \"equals\", \"\", this.props.equal]];\r\n    render(){      \r\n        return (\r\n            <div id=\"page-wrapper\">\r\n                <div id=\"calculator-wrapper\">\r\n                    <DisplayComponent viewNumber={this.props.calcChain[this.props.nextChainKey - 1][0]} className=\"grid-item\"/>\r\n                    {this.buttonArr.map((button, index) => <CalcButtonComponent chain={this.props.calcChain} key={index} className={\"grid-item \" + button[2]} value={button[0]} id={button[1]} onClick={button[3]}/>)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalculatorComponent;","const NEW_DIGIT = \"NEW_DIGIT\";\r\n\r\nconst DOT = \"DOT\";\r\n\r\n/*\r\nconst ADD = \"ADD\";\r\nconst SUBTRACT = \"SUBTRACT\";\r\nconst DIVIDE = \"DIVIDE\";\r\nconst MULTIPLY = \"MULTIPLY\";\r\n*/\r\n\r\nconst OPERATION = \"OPERATION\";\r\n\r\nconst EQUAL = \"EQUAL\";\r\n\r\nconst CLEAR = \"CLEAR\";\r\n\r\nexport default {\r\n    NEW_DIGIT,\r\n    DOT,\r\n    /*ADD,\r\n    SUBTRACT,\r\n    DIVIDE,\r\n    MULTIPLY,*/\r\n    OPERATION,\r\n    EQUAL,\r\n    CLEAR\r\n}\r\n\r\n","import types from \"./types\";\r\n\r\nconst appendDigit = (digit) => ({\r\n    type: types.NEW_DIGIT,\r\n    value: digit\r\n});\r\n\r\n/*\r\nconst add = () => ({\r\n    type: types.ADD\r\n});\r\n\r\nconst subtract = () => ({\r\n    type: types.SUBTRACT\r\n});\r\n\r\nconst divide = () => ({\r\n    type: types.DIVIDE\r\n});\r\n\r\nconst multiply = () => ({\r\n    type: types.MULTIPLY\r\n});\r\n*/\r\n\r\nconst operator = (operationFunc) => ({\r\n    type: types.OPERATION,\r\n    func: operationFunc\r\n});\r\n\r\nconst equal = () => ({\r\n    type: types.EQUAL\r\n});\r\n\r\nconst dot = () => ({\r\n    type: types.DOT\r\n});\r\n\r\nconst clear = () => ({\r\n    type: types.CLEAR\r\n});\r\n\r\nexport default {\r\n    appendDigit,\r\n    operator,\r\n    equal,\r\n    dot,\r\n    clear\r\n}","import {connect} from \"react-redux\";\r\nimport CalculatorComponent from \"./CalculatorComponent\";\r\nimport actions from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ...state.main\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    appendDigit: function(digit) {\r\n        dispatch(actions.appendDigit(digit));\r\n    },\r\n\r\n    operation: function(operationFunc) {\r\n        dispatch(actions.operator(operationFunc));\r\n    },\r\n\r\n    equal: function(){\r\n        dispatch(actions.equal());\r\n    },\r\n\r\n    clear: function(){\r\n        dispatch(actions.clear());\r\n    },\r\n    dot: function(){\r\n        dispatch(actions.dot());\r\n    }\r\n});\r\n\r\nconst CalculatorContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CalculatorComponent);\r\n\r\nexport default CalculatorContainer;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route\n} from \"react-router-dom\";\nimport CalculatorContainer from \"./main/components/Calculator/CalculatorContainer\";\n\nfunction App() {\n  return (\n      <div>\n        <CalculatorContainer />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import types from \"./types\";\r\n\r\nconst NEW_CHAIN_PART = [\"0\", undefined];\r\n\r\nconst defaultState = {\r\n    calcChain: {0: [\"0\", undefined]},\r\n    nextChainKey: 1,\r\n    result: 0,\r\n    isLastResult: false\r\n};\r\n\r\nconst mainReducer = (state=defaultState, action) => {    \r\n    let newChain = {...state.calcChain};\r\n    switch(action.type){\r\n        case types.NEW_DIGIT:\r\n            newChain = {...state.calcChain};\r\n            let lastChainPart = newChain[state.nextChainKey - 1];\r\n            let isLastResult = state.isLastResult\r\n\r\n            if(Object.keys(newChain).length === 1 && state.isLastResult === true){\r\n                newChain[0][0] = \"\" + action.value;\r\n                isLastResult = false;\r\n            }\r\n            else if((lastChainPart[0] === \"0\" && action.value !== 0)){ //only one zero\r\n                newChain[state.nextChainKey - 1][0] = \"\" + action.value;\r\n            }\r\n            else if(/\\.0$/.test(lastChainPart[0]) === true){ //handling dot numbers\r\n                newChain[state.nextChainKey - 1][0] = lastChainPart[0].substring(0, lastChainPart[0].length - 1) + action.value;\r\n            }\r\n            else if(lastChainPart[0] !== \"0\"){ // everything else\r\n                newChain[state.nextChainKey - 1][0] += \"\" + action.value;\r\n            }\r\n\r\n            return {\r\n                calcChain: newChain,\r\n                nextChainKey: state.nextChainKey,\r\n                result: state.result,\r\n                isLastResult: isLastResult\r\n            }\r\n            \r\n        case types.OPERATION:\r\n            newChain = {...state.calcChain};\r\n\r\n            newChain[state.nextChainKey - 1][1] = action.func;\r\n            newChain[state.nextChainKey] = [\"0\", undefined];\r\n            \r\n            console.log(newChain[state.nextChainKey]);\r\n            \r\n            return {\r\n                calcChain: newChain,\r\n                nextChainKey: state.nextChainKey + 1,\r\n                result: state.result,\r\n                isLastResult: state.isLastResult\r\n            }\r\n            \r\n        case types.EQUAL:\r\n            var result = parseFloat(state.calcChain[0][0]);\r\n\r\n            if(Object.keys(state.calcChain).length !== 1){\r\n                var i = 0;\r\n                do{\r\n                    if(/\\.$/.test(state.calcChain[i][0])){\r\n                        result = state.calcChain[i][1](result, parseFloat(state.calcChain[i+1][0] + \"0\"));\r\n                    }\r\n                    result = state.calcChain[i][1](result, parseFloat(state.calcChain[i+1][0]));\r\n                    i++;\r\n                } while(state.calcChain[i][1] !== undefined);\r\n            }\r\n\r\n            return {\r\n                calcChain: {0: [\"\"+result, undefined]},\r\n                nextChainKey: 1,\r\n                result: result,\r\n                isLastResult: true\r\n            };\r\n            \r\n        case types.CLEAR:\r\n            return {\r\n                calcChain: {0: [\"0\", undefined]},\r\n                nextChainKey: 1,\r\n                result: 0,\r\n                isLastResult: state.isLastResult\r\n            };\r\n            \r\n        case types.DOT:\r\n            newChain = {...state.calcChain};\r\n            newChain[state.nextChainKey - 1][0] += \".\";\r\n\r\n            return {\r\n                calcChain: newChain,\r\n                nextChainKey: state.nextChainKey,\r\n                result: state.result,\r\n                isLastResult: state.isLastResult\r\n            };\r\n            \r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default mainReducer;","import mainReducer from \"./reducers\";\r\nexport {default as mainTypes} from \"./types\";\r\nexport {default as mainActions} from \"./actions\";\r\nexport default mainReducer;","import {combineReducers} from \"redux\";\r\nimport mainReducer from \"./app/main/redux/index\";\r\n\r\nconst rootReducer = combineReducers({\r\n    main: mainReducer\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport {createStore} from \"redux\";\nimport rootReducer from \"./reducers\";\n\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}